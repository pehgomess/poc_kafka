import pexpect
import os

print("Geracao do certificado authority - CA\n")
print("\t a) Geracao do Root")

child = pexpect.spawn(
    'openssl req -new -x509 -keyout ca-key -out ca-cert -days 365')
child.expect('Enter PEM pass phrase:')
child.sendline('{{ passcert }}')
child.expect('Verifying - Enter PEM pass phrase:')
child.sendline('{{ passcert }}')
child.expect('Country Name .*')
child.sendline('BR')
child.expect('State or Province Name')
child.sendline('SP')
child.expect('Locality Name')
child.sendline('SP')
child.expect('Organization Name')
child.sendline('{{ domain }}')
child.expect('Organizational Unit Name')
child.sendline('POC')
child.expect('Common Name')
child.sendline('*.{{ domain }}')
child.expect('Email Address')
child.sendline('research@{{ domain }}')
child.expect(pexpect.EOF)

print("\t b) Adicionar ao truststore do Client, para confiarem na CA")

child = pexpect.spawn(
    'keytool -keystore client.truststore.jks -alias caroot -import -file ca-cert')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect('Trust this certificate')
child.sendline('yes')
child.expect(pexpect.EOF)

print("\t c) Para os brokers confiarem nos Clients, adicionar as CAs que assinarem os certificados dos clientes. Neste caso a CA e a mesma")

child = pexpect.spawn(
    'keytool -keystore server.truststore.jks -alias caroot -import -file ca-cert')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect('Trust this certificate')
child.sendline('yes')
child.expect(pexpect.EOF)


print("\nGeracao dos certificados de cada broker\n")

#{% set server_broker = [] %}
#{% for broker in groups['kafka'] %}
#{{ server_broker.append("DNS:"+broker) }}
#{% endfor %}
#child = pexpect.spawn(
#    'keytool -keystore server.keystore.jks -alias localhost -validity 365 -genkey -keyalg RSA -ext \
#        SAN={{ server_broker|join(',') }}')
child = pexpect.spawn('keytool -keystore server.keystore.jks -alias localhost -validity 365 -genkey -keyalg RSA')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect('What is your first and last name')
child.sendline('*.{{ domain }}')
child.expect('What is the name of your organizational unit')
child.sendline('POC')
child.expect('What is the name of your organization')
child.sendline('{{ domain }}')
child.expect('What is the name of your City or Locality')
child.sendline('SP')
child.expect('What is the name of your State or Province')
child.sendline('SP')
child.expect('What is the two-letter country code for this unit')
child.sendline('BR')
child.expect('correct')
child.sendline('yes')
child.expect('Enter key password for .*')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

print("\nAssinatura dos Certificados pela CA (para cada certificado de cada broker)\n")

print("\t a) Extracao do certificado")
child = pexpect.spawn('keytool -keystore server.keystore.jks -alias localhost -certreq -file cert-file')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

print("\t b) Assinar com a CA")
os.system('openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 365 -CAcreateserial -passin pass:{{ passcert }}')

print("\n\t c) Importar certificado da CA para o keystore")
child = pexpect.spawn('keytool -keystore server.keystore.jks -alias caroot -import -file ca-cert')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Trust this certificate')
child.sendline('yes')
child.expect(pexpect.EOF)

print("\nAssinatura do certificado do cliente pela CA\n")

print("\t a) Geracao do certificado do cliente")

#{% set server_client = [] %}
#{% for client in groups['client'] %}
#{{ server_client.append( "DNS:"+client ) }}
#{% endfor %}
#child = pexpect.spawn(
#    'keytool -keystore client.keystore.jks -alias localhost -validity 365 -genkey -keyalg RSA -ext \
#        SAN={{ server_client|join(',') }}')
child = pexpect.spawn('keytool -keystore client.keystore.jks -alias localhost -validity 365 -genkey -keyalg RSA')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect('What is your first and last name')
child.sendline('*.{{ domain }}')
child.expect('What is the name of your organizational unit')
child.sendline('POC')
child.expect('What is the name of your organization')
child.sendline('{{ domain }}')
child.expect('What is the name of your City or Locality')
child.sendline('SP')
child.expect('What is the name of your State or Province')
child.sendline('SP')
child.expect('What is the two-letter country code for this unit')
child.sendline('BR')
child.expect('correct')
child.sendline('yes')
child.expect('Enter key password for .*')
child.sendline('{{ passcert }}')
child.expect('Re-enter new password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

print("\t b) Extracao do certificado para ser assinado")

child = pexpect.spawn('keytool -keystore client.keystore.jks -alias localhost -certreq -file cert-file-client')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

print("\t c) Assinar com a CA")
os.system('openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file-client -out cert-client-signed -days 365 -CAcreateserial -passin pass:{{ passcert }}')

print("\n\t d) Importar certificado da CA para o keystore")

child = pexpect.spawn('keytool -keystore client.keystore.jks -alias caroot -import -file ca-cert')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect('Trust this certificate')
child.sendline('yes')
child.expect(pexpect.EOF)

print("\t e) Importar o certificado de volta, agora assinado pela CA")
child = pexpect.spawn('keytool -keystore client.keystore.jks -alias localhost -import -file cert-client-signed')
child.expect('Enter keystore password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

child = pexpect.spawn('keytool -importkeystore -srckeystore server.keystore.jks -destkeystore server.keystore.jks -deststoretype pkcs12')
child.expect('Enter source keystore password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

child = pexpect.spawn('keytool -importkeystore -srckeystore client.keystore.jks -destkeystore client.keystore.jks -deststoretype pkcs12')
child.expect('Enter source keystore password')
child.sendline('{{ passcert }}')
child.expect(pexpect.EOF)

print("\nFim da geracao do certificado")
f=open("ok.cert","w+")
